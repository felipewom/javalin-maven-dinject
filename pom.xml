<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>javalin-maven-dinject</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>api</name>
    <properties>
        <!--dependencies-->
        <java_version>1.8</java_version>
        <kotlin.version>1.3.72</kotlin.version>
        <!--plugins-->
        <maven_compiler_plugin_version>3.8.1</maven_compiler_plugin_version>
        <maven.compiler.source>${java_version}</maven.compiler.source>
        <maven.compiler.target>${java_version}</maven.compiler.target>
        <!--variables-->
        <docker.repository>docker-ungp.softplan.com.br</docker.repository>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.class>com.example.App</main.class>
        <docker.buildArg.appId>${project.artifactId}-${project.version}-jar-with-dependencies.jar</docker.buildArg.appId>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.avaje.composite</groupId>
            <artifactId>logback</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin</artifactId>
            <version>3.8.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.10.5.1</version>
        </dependency>
        <dependency>
            <groupId>io.dinject</groupId>
            <artifactId>dinject</artifactId>
            <version>1.14</version>
        </dependency>
        <dependency>
            <groupId>io.dinject</groupId>
            <artifactId>dinject-controller</artifactId>
            <version>1.14</version>
        </dependency>
        <dependency>
            <groupId>io.dinject</groupId>
            <artifactId>controller-validator-hibernate</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.1.0</version>
        </dependency>
        <!--database-->
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>6.4.0.jre8</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.ebean</groupId>
            <artifactId>ebean</artifactId>
            <version>12.2.1</version>
        </dependency>
        <!-- support for query beans -->
        <dependency>
            <groupId>io.ebean</groupId>
            <artifactId>ebean-querybean</artifactId>
            <version>12.2.1</version>
        </dependency>
        <!-- java annotation processor to generate query beans -->
        <dependency>
            <groupId>io.ebean</groupId>
            <artifactId>querybean-generator</artifactId>
            <version>12.2.1</version>
            <scope>provided</scope>
        </dependency>
        <!--
        Optional but Ebean will read these annotations
        like @size to determine column lengths etc
        -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
            <!--<version>1.0.0.GA</version>-->
        </dependency>
        <!-- java annotation processors -->
        <dependency>
            <groupId>io.dinject</groupId>
            <artifactId>dinject-generator</artifactId>
            <version>1.11</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.dinject</groupId>
            <artifactId>javalin-generator</artifactId>
            <version>1.11</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.10.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>2.10.2</version>
        </dependency>
        <!-- test dependencies -->
        <dependency>
            <groupId>org.avaje.composite</groupId>
            <artifactId>junit</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>app</finalName>
        <plugins>
            <plugin>
                <groupId>io.dinject</groupId>
                <artifactId>openapi-maven-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <id>main</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>openapi</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.repaint.maven</groupId>
                <artifactId>tiles-maven-plugin</artifactId>
                <version>2.12</version>
                <extensions>true</extensions>
                <configuration>
                    <tiles>
                        <tile>org.avaje.tile:lib-classpath:1.1</tile>
                        <tile>io.ebean.tile:enhancement:12.2.1</tile>
                    </tiles>
                </configuration>
            </plugin>
            <!--kotlin-maven-plugin-->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--maven-compiler-plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven_compiler_plugin_version}</version>
                <configuration>
                    <source>${java_version}</source>
                    <target>${java_version}</target>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <!-- get all project dependencies -->
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <!-- MainClass in mainfest make a executable jar -->
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <!-- bind to the packaging phase -->
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--mvn docker:build-->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <useColor>true</useColor>
                    <verbose>true</verbose>
                    <skip>false</skip>
                    <images>
                        <image>
                            <name>${docker.repository}/${project.artifactId}</name>
                            <alias>${project.name}</alias>
                            <build>
                                <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
                                <filter>@</filter>
                                <dockerFile>Dockerfile</dockerFile>
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                                <ports>
                                    <port>8080</port>
                                    <port>7000</port>
                                </ports>
                                <assembly>
                                    <mode>dir</mode>
                                    <basedir>${project.basedir}</basedir>
                                    <descriptorRef>artifact-with-dependencies</descriptorRef>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>${project.basedir}/src/main/resources</directory>
                                                <outputDirectory>./</outputDirectory>
                                                <includes>
                                                    <include>*</include>
                                                </includes>
                                            </fileSet>
                                            <fileSet>
                                                <directory>${project.basedir}/target</directory>
                                                <outputDirectory>./</outputDirectory>
                                                <includes>
                                                    <include>${docker.buildArg.appId}</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                                <env>
                                    <JAVA_LIB_DIR>.</JAVA_LIB_DIR>
                                    <JAVA_MAIN_CLASS>${main.class}</JAVA_MAIN_CLASS>
                                </env>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
